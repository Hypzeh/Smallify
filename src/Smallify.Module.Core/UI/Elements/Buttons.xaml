<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="TitleBarButtonStyle"
           BasedOn="{StaticResource {x:Type Button}}"
           TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource MainBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Width="40"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource SecondaryControlBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TitleBarExitButtonStyle"
           BasedOn="{StaticResource TitleBarButtonStyle}"
           TargetType="{x:Type Button}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Red" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PlaybackButtonStyle"
           BasedOn="{StaticResource {x:Type Button}}"
           TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{DynamicResource PlaybackButtonBrush}" />
        <Setter Property="Background" Value="{DynamicResource MainBackgroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Width="{Binding RelativeSource={RelativeSource Mode=Self}, Path=ActualHeight}"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource PlaybackButtonHoverBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="RefreshButtonStyle"
           BasedOn="{StaticResource PlaybackButtonStyle}"
           TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Opacity" Value="0" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="100" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="RadioToggleButtonStyle"
           BasedOn="{StaticResource {x:Type ToggleButton}}"
           TargetType="{x:Type RadioButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="10"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{DynamicResource MainBackgroundBrush}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource SecondaryControlBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DismissButtonStyle"
           BasedOn="{StaticResource {x:Type Button}}"
           TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryButtonForegroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource SecondaryTextBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PrimaryButtonStyle"
           BasedOn="{StaticResource {x:Type Button}}"
           TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource PrimaryButtonBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryButtonBorderBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryButtonForegroundBrush}" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Height="50"
                            Padding="{TemplateBinding Padding}">
                        <Border Padding="5"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="20">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center" />
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource PrimaryButtonBackgroundHoverBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryButtonBorderHoverBrush}" />
                <Setter Property="Padding" Value="3" />
            </Trigger>
            <Trigger Property="Button.IsPressed" Value="True">
                <Setter Property="Padding" Value="5" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SecondaryButtonStyle"
           BasedOn="{StaticResource PrimaryButtonStyle}"
           TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource SecondaryButtonBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource SecondaryButtonBorderBrush}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Foreground" Value="{DynamicResource SecondaryButtonForegroundBrush}" />

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource SecondaryButtonBackgroundHoverBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource SecondaryButtonBorderHoverBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>
